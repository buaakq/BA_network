# -*- coding: ascii -*-
from __future__ import division
from pylab import *
import pickle
import matplotlib.pyplot as plt
import sys

r_path = sys.argv[1]
x = int(sys.argv[2])
lamuta = float(sys.argv[3])
N = int(sys.argv[4])
cut = int(sys.argv[5])

def draw_one_line(data, times, line, point, N, lamuta, cut):
    data = data[0:cut]
    lens = len(data)
    index = get_index(lens, N, lamuta)
    data = get_data(data, N)
    print data
   
    pandl = ['g-*']*5
    lab = ['GK Model']

    # set x and y axis
    ax = plt.gca()
    axis_x = ('0','0.5','1.0','1.5','2.0','2.5','3.0')
    ax.set_xticklabels(axis_x)
    ax.set_xlabel('The initial shock proportion of total assets(Per thousand)')  
    ax.set_ylabel('fraction of bank insolvency(%)') 
    
    #add a legend
    #plt.plot(index, data, line)
    #for i in range(lens):
        #plt.plot(index[i], data[i], point, markersize=7 ,alpha = times[i]/(max(times)))
    plt.plot(index, data, pandl[1], markersize=7, label=lab[0])

    legend(loc='best')


def get_index(n, N, lamuta):
    x = []
    for i in range(1,n+1):
        x.append(i*lamuta/(N)*1000)
    return x

def get_data(data, N):
    new = []
    for i in data:
        new.append(i/N*100)
    return new

if __name__ == "__main__":
    pkl = open(r_path, 'rb')  
    data = []
    times = []
    
    #for i in range(6):
    for i in range(x):
        data.append(pickle.load(pkl))
        times.append(pickle.load(pkl))
    
    #y = modify_data(data)
    #x = get_x(N,lamuta)
    
    lens = len(data)

    line = ['g-','b-','k-','y-','r-']
    shape = ['g*', 'bs' , 'k+' , 'yo' ,'rx' ]

    for i in range(lens):
        draw_one_line(data[i],times[i], line[i], shape[i], N, lamuta, cut)

    plt.show()
